/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animedatabase.views;

import animedatabase.controls.AnimeControl;
import static animedatabase.views.Tela.cardLayout;
import static animedatabase.views.Tela.pnConteudo;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jeans
 */
public class TelaConfiguracoes extends javax.swing.JPanel {

    /**
     * Creates new form TelaInicial
     */
    private final AnimeControl animeControl;

    public TelaConfiguracoes(AnimeControl animeControl) {
        initComponents();
        this.animeControl = animeControl;
    }

    private class Ler implements Runnable {

        @Override
        public void run() {
            try {
                animeControl.lerHtmlAnbient(cbSalvarImgs.isSelected(), cbResetarBd.isSelected());
                btLeitura.setEnabled(true);
            } catch (IOException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btVer = new javax.swing.JButton();
        btLeitura = new javax.swing.JButton();
        cbSalvarImgs = new javax.swing.JCheckBox();
        cbResetarBd = new javax.swing.JCheckBox();
        btMigrar = new javax.swing.JButton();

        btVer.setBackground(new java.awt.Color(255, 255, 255));
        btVer.setText("Ver dados já salvos");
        btVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerActionPerformed(evt);
            }
        });

        btLeitura.setBackground(new java.awt.Color(255, 255, 255));
        btLeitura.setText("Iniciar leitura dos dados do site");
        btLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLeituraActionPerformed(evt);
            }
        });

        cbSalvarImgs.setText("Salvar imagens fisicamente");

        cbResetarBd.setText("Resetar banco de dados");

        btMigrar.setBackground(new java.awt.Color(255, 255, 255));
        btMigrar.setText("Migrar dados ");
        btMigrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMigrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btVer, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btMigrar, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbSalvarImgs, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbResetarBd, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btVer, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMigrar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSalvarImgs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbResetarBd)
                .addContainerGap(224, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLeituraActionPerformed
        String opcao = "";

        if (cbSalvarImgs.isSelected()) {
            opcao += " salvar imagens fisicamente";
        }
        if (cbResetarBd.isSelected()) {
            opcao += " deletar todo o banco de dados e recomeçar a salvar novamente";
        }
        int dialogResult = JOptionPane.showConfirmDialog(null, "Buscar novos dados" + opcao + "?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            new Thread(new Ler()).start();
            btLeitura.setEnabled(false);
            Tela.ocultarMostrarPainel();
        }

//        Timer timer = new Timer();
//        TimerTask myTask = new TimerTask() {
//            @Override
//            public void run() {
//                System.out.println("teste");
//            }
//        };
//
//        timer.schedule(myTask, 1000, 1000);
    }//GEN-LAST:event_btLeituraActionPerformed

    private void btVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerActionPerformed
        cardLayout.show(pnConteudo, "Tela Buscar");
    }//GEN-LAST:event_btVerActionPerformed

    private void btMigrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMigrarActionPerformed
        new JanelaMigrar();
    }//GEN-LAST:event_btMigrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btLeitura;
    public static javax.swing.JButton btMigrar;
    public static javax.swing.JButton btVer;
    private javax.swing.JCheckBox cbResetarBd;
    private javax.swing.JCheckBox cbSalvarImgs;
    // End of variables declaration//GEN-END:variables
}
